#! /bin/zsh

# Defaults
BANNER_HEIGHT=30
BANNERY=0
BANNER_FONT="-16:Bold"
CLASSIFICATION="u"

function finish {
bspc config top_padding 30
bspc config bottom_padding 0
}

function showusage {
cat << "EOF"
classify version whatever, by injected
usage: classify [-h | -c | -y]
	-h show this help
	-c [keyword] use this classification
	-c show availible keywords
	-y adjust banner height, default 30
	-d top banner y axis postion relative to top of screen
click panel text to close
EOF
}

trap finish SIGHUP SIGINT SIGTERM EXIT

# read command line parameters
while [ $# -gt 0 ]; do
  case "$1" in
    -c|--classification)
              CLASSIFICATION="$2"
              ;;
    -y|--height)
              BANNER_HEIGHT="$2"
              shift
              ;;
	-d)
			  BANNERY="$2"
			  shift
			  ;;
	-h|--help)
              showusage
              exit
			  ;;
  esac
  shift
done

# set up bar
case "$CLASSIFICATION" in
  u)
    BANNER_TEXT="%{c} %{A:kill 0:} UNCLASSIFIED %{A}"
	COLOUR_BACKGROUND='#006600'
	COLOUR_FOREGROUND='#EBDBB2'
	;;
 fouo)
    BANNER_TEXT="%{c} %{A:kill 0:} UNCLASSIFIED // FOR OFFICIAL USE ONLY %{A}"
	COLOUR_BACKGROUND='#006600'
	COLOUR_FOREGROUND='#EBDBB2'
	;;
  c)
    BANNER_TEXT="%{c} %{A:kill 0:} CONFIDENTIAL %{A}"
	COLOUR_BACKGROUND='#076678'
	COLOUR_FOREGROUND='#EBDBB2'
	;;
  s)
    BANNER_TEXT="%{c} %{A:kill 0:} SECRET %{A}"
	COLOUR_BACKGROUND='#CC241D'
	COLOUR_FOREGROUND='#EBDBB2'
	;;
  ts)
    BANNER_TEXT="%{c} %{A:kill 0:} TOP SECRET %{A}"
	COLOUR_BACKGROUND='#D65D0E'
	COLOUR_FOREGROUND='#EBDBB2'
	;;
  sci)
    BANNER_TEXT="%{c} %{A:kill 0:} TOP SECRET // SCI %{A}"
	COLOUR_BACKGROUND='#FABD2F'
	COLOUR_FOREGROUND='#1D2021'
	;;
  core)
	BANNER_TEXT="%{c} %{A:kill 0:} TOP SECRET // COMINT // NOFORN %{A}"
	COLOUR_BACKGROUND='#FABD2F'
	COLOUR_FOREGROUND='#1D2021'
	;;
  *)
	cat << "EOF"
Classification keywords availible:
u       UNCLASSIFIED
fouo    UNCLASSIFIED // FOR OFFICIAL USE ONLY
c       CONFIDENTIAL
s       SECRET
ts      TOP SECRET
sci     TOP SECRET // SCI
core    TOP SECRET // COMINT // NOFORN
EOF
	exit
	;;
esac

bspc config top_padding $(($BANNER_HEIGHT+$BANNERY))
bspc config bottom_padding $BANNER_HEIGHT
export PANELY=$BANNER_HEIGHT

echo $BANNER_TEXT | lemonbar -p -g x$BANNER_HEIGHT++$BANNERY -f "$BANNER_FONT" -F "$COLOUR_FOREGROUND" -B "$COLOUR_BACKGROUND" | zsh &
echo $BANNER_TEXT | lemonbar -p -b -g x$BANNER_HEIGHT -f "$BANNER_FONT" -F "$COLOUR_FOREGROUND" -B "$COLOUR_BACKGROUND" | zsh &

wait
