#!/bin/bash

# this is a simple operation, really. all we do is fetch data from last.fm, get
# the albm cover links, download them, and put them in the right place.
# There are no heuristics going on here, it only works on exact matches!

#(( $# != 2 )) && echo 'Usage: $0 Artist Album' && return 1

if [[ -z "$3" ]]; then
    3="."
fi
path="$3"

if [[ -e "$1/$2.xpm" ]]; then
    echo "Error: File exists: $1/$2.xpm"
    return 2
fi

echo "Fetching Artist $1, Album $2..."

# simple http get request for album.getinfo, with artist + album
data=$(curl \
    --data-urlencode method=album.getinfo \
    --data-urlencode api_key=2f63459bcb2578a277c5cf5ec4ca62f7 \
    --data-urlencode artist="$1" \
    --data-urlencode album="$2" \
    -G -s http://ws.audioscrobbler.com/2.0/)

if [[ $? -ne 0 ]]; then
    echo 'Error: Unable to fetch album data!'
    exit 3
fi



# try to find a cover art link
# setopt rematchpcre
match=$(echo "$data" | grep -oP '<image size="mega">([^<]+)</image>' | sed -Ee 's|<image.*(https://.*)</image>|\1|')
if [[ -z "$match" ]]; then
    echo 'Error: No cover art found in album info.'
    exit 4
fi

artist="${1/\//_}"
album="${2/\//_}"

# make sure this dir exists..
if [[ ! -d "$3/$artist" ]]; then
    echo "Creating $artist.."
    mkdir "$3/$artist"
fi

# download and convert. heh.
echo 'Downloading and converting..'
largepath="$3/$artist/$album-large.png"
curl -s "$match" > "$largepath"
convert "$largepath" -resize 64x64 "$3/$artist/$album-64x64.xpm"
convert "$largepath" -resize 256x256 "$3/$artist/$album-256x256.xpm"

if [[ $? == 0 ]]; then
    echo 'All done!'
    exit 0
else
    echo 'Error fetching or converting..'
    exit 5
fi
