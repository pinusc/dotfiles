# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html
import os
import redirect

config.load_autoconfig()

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

import sys, os
# sys.path.append(os.path.join(sys.path[0], 'jblock'))
# config.source("jblock/jblock/integrations/qutebrowser.py")

if os.path.exists('/home/pinusc/.local/share/colors'):
    colors = {}
    with open('/home/pinusc/.local/share/colors') as f:
        for line in f:
            name, color = line.split('=')
            color = color.strip().strip('"')
            colors[name] = color

    c.colors.completion.fg = colors['base05']
    c.colors.completion.odd.bg = colors['base00']
    c.colors.completion.even.bg = colors['base00']
    c.colors.completion.category.fg = colors['base0A']
    c.colors.completion.category.bg = colors['base00']
    c.colors.completion.category.border.top = colors['base00']
    c.colors.completion.category.border.bottom = colors['base00']
    c.colors.completion.item.selected.fg = colors['base01']
    c.colors.completion.item.selected.bg = colors['base0A']
    c.colors.completion.item.selected.border.top = colors['base0A']
    c.colors.completion.item.selected.border.bottom = colors['base0A']
    c.colors.completion.match.fg = colors['base0B']
    c.colors.completion.scrollbar.fg = colors['base05']
    c.colors.completion.scrollbar.bg = colors['base00']
    c.colors.downloads.bar.bg = colors['base00']
    c.colors.downloads.start.fg = colors['base00']
    c.colors.downloads.start.bg = colors['base0D']
    c.colors.downloads.stop.fg = colors['base00']
    c.colors.downloads.stop.bg = colors['base0C']
    c.colors.downloads.error.fg = colors['base08']
    c.colors.hints.fg = colors['base00']
    c.colors.hints.bg = colors['base0A']
    c.colors.hints.match.fg = colors['base05']
    c.colors.keyhint.fg = colors['base05']
    c.colors.keyhint.suffix.fg = colors['base05']
    c.colors.keyhint.bg = colors['base00']
    c.colors.messages.error.fg = colors['base00']
    c.colors.messages.error.bg = colors['base08']
    c.colors.messages.error.border = colors['base08']
    c.colors.messages.warning.fg = colors['base00']
    c.colors.messages.warning.bg = colors['base0E']
    c.colors.messages.warning.border = colors['base0E']
    c.colors.messages.info.fg = colors['base05']
    c.colors.messages.info.bg = colors['base00']
    c.colors.messages.info.border = colors['base00']
    c.colors.prompts.fg = colors['base05']
    c.colors.prompts.border = colors['base00']
    c.colors.prompts.bg = colors['base00']
    c.colors.prompts.selected.bg = colors['base0A']
    c.colors.statusbar.normal.fg = colors['base0B']
    c.colors.statusbar.normal.bg = colors['base00']
    c.colors.statusbar.insert.fg = colors['base00']
    c.colors.statusbar.insert.bg = colors['base0D']
    c.colors.statusbar.passthrough.fg = colors['base00']
    c.colors.statusbar.passthrough.bg = colors['base0C']
    c.colors.statusbar.private.fg = colors['base00']
    c.colors.statusbar.private.bg = colors['base03']
    c.colors.statusbar.command.fg = colors['base05']
    c.colors.statusbar.command.bg = colors['base00']
    c.colors.statusbar.command.private.fg = colors['base05']
    c.colors.statusbar.command.private.bg = colors['base00']
    c.colors.statusbar.caret.fg = colors['base00']
    c.colors.statusbar.caret.bg = colors['base0E']
    c.colors.statusbar.caret.selection.fg = colors['base00']
    c.colors.statusbar.caret.selection.bg = colors['base0D']
    c.colors.statusbar.progress.bg = colors['base0D']
    c.colors.statusbar.url.fg = colors['base05']
    c.colors.statusbar.url.error.fg = colors['base08']
    c.colors.statusbar.url.hover.fg = colors['base05']
    c.colors.statusbar.url.success.http.fg = colors['base0C']
    c.colors.statusbar.url.success.https.fg = colors['base0B']
    c.colors.statusbar.url.warn.fg = colors['base0E']
    c.colors.tabs.bar.bg = colors['base00']
    c.colors.tabs.indicator.start = colors['base0D']
    c.colors.tabs.indicator.stop = colors['base0C']
    c.colors.tabs.indicator.error = colors['base08']
    c.colors.tabs.odd.fg = colors['base05']
    c.colors.tabs.odd.bg = colors['base00']
    c.colors.tabs.even.fg = colors['base05']
    c.colors.tabs.even.bg = colors['base00']
    c.colors.tabs.selected.odd.fg = colors['base05']
    c.colors.tabs.selected.odd.bg = colors['base02']
    c.colors.tabs.selected.even.fg = colors['base05']
    c.colors.tabs.selected.even.bg = colors['base02']
    c.colors.tabs.pinned.odd.fg = colors['base00']
    c.colors.tabs.pinned.odd.bg = colors['base0A']
    c.colors.tabs.pinned.even.fg = colors['base00']
    c.colors.tabs.pinned.even.bg = colors['base0A']
    c.colors.tabs.pinned.selected.odd.fg = colors['base00']
    c.colors.tabs.pinned.selected.odd.bg = colors['base0D']
    c.colors.tabs.pinned.selected.even.fg = colors['base00']
    c.colors.tabs.pinned.selected.even.bg = colors['base0D']

# config.source('qutenyan/nyan.py')
