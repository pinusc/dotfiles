
# leave one line blank for compatibility
#vim ft=sh
alias upfont="sudo fc-cache -fv"
alias cal="cal -m" # Monday it's always the first day of the week here!
alias tmux="tmux -2"
alias pingg="ping -a perdu.com"
alias rsync="rsync --info=progress2"

# Python aliases
alias v="source venv/bin/activate"
alias d="deactivate"

alias setclip='xclip -selection c'
alias getclip='xclip -selection clipboard -o'

alias screensaver_off="xset s off;xset -dpms;xset s noblank"
moviemode() {
    xset s off
    xset -dpms
    xset s noblank
    killall xautolock
    systemctl --user stop mbsync.service
    systemctl --user stop mbsync.timer
    killall redshift
}

#fast edit shiortcuts
[ -f "/usr/bin/nvim" ] && alias vim="/usr/bin/nvim"
alias :e=em
alias bc="bc -l"

#systemctl aliases
alias sysa="sudo systemctl start"
alias syso="sudo systemctl stop"
alias syss="sudo systemctl status"
alias sysr="sudo systemctl restart"
alias syse="sudo systemctl enable --now"

alias usysa="systemctl --user start"
alias usyso="systemctl --user stop"
alias usyss="systemctl --user status"
alias usysr="systemctl --user restart"
alias usyse="systemctl --user enable --now"
alias usys="systemctl --user"

alias joxe="sudo journalctl -xe"
alias joxeu="sudo journalctl -xe --unit"

alias did="vim +'normal Go' +'r!date' ~/docs/did.txt"
alias mail="mail -r giuseppe@gstelluto.com"
>&/dev/null hash neomutt && alias mutt='neomutt'
alias mailsync="pkill -SIGUSR1 offlineimap"
alias vp="zathura --fork"
alias zathura="zathura --fork"

alias tarsnap="tarsnap --configfile ~/.config/tarsnap/tarsnaprc"

mdmake() {
    cp "$HOME/.config/templates/pandoc/Makefile" "."
    cp "$HOME/.config/templates/pandoc/doc.md" "$1"
}


if hash pinfo >&/dev/null; then
    alias info='pinfo'
fi
if hash exa >&/dev/null; then
    alias ls='exa'   
    alias lt='exa -T'
    alias lg='exa --long --git'
fi

alias l='ls'
alias ll='ls -lh'
alias la='ll -a'
alias lt='ls -al --tree'

if [ "$SHELL" = /bin/zsh ]; then 
    alias -g LL='| bat'
    alias -g LLH='--help | bat'
    alias -g LLC='--color=always | bat'
    alias -g NNNSEL='$(nnn -p -)'
fi
if hash rg &>/dev/null;then 
    alias rgc='rg --color always'
fi
if hash fd &>/dev/null;then 
    alias fdc='fd --color always'
fi

export _JAVA_AWT_WM_NONREPARENTING=1

addalias() {
    echo "alias $1=\"$2\"" >> ~/.zsh_aliases
}

[ -e "$HOME/bin/util/gpg-wrapper.zsh" ] && source ~/bin/util/gpg-wrapper.zsh

alias riot-web="qutebrowser ':open -w https://riot.im/app/#'"

alias https="http --default-scheme=https"

read_all_mail() {
    find "$MAIL" -type f | grep -vE ',[^,]*S[^,]*$' | xargs -I{} sh -c 'mv {} $(echo {} | sed "s/new/cur/; s/2,$/2,S/")'
}

copy_dotfiles() {
    [[ -z "$1" ]] && echo "You need to provide a ssh hostname!" && return
    server="$1"
    echo "Copying to: $server"
    if [[ "$(ssh "$server" 'echo $SHELL')" =~ 'zsh' ]]; then
        \rsync --timeout 3 -vh ~/dot/zsh/.* "$server:"
    else
        \rsync --timeout 3 -vh ~/dot/bash/.* "$server:"
    fi
    cat ~/dot/aliases/.* | ssh -o 'ConnectTimeout=3' "$server" "tee ~/.aliases" >/dev/null
    \rsync --timeout 3 -vh ~/dot/tmux/.tmux.conf "$server:"
}

sync_dotfiles() {
    copy_dotfiles thalia
    copy_dotfiles athena
    copy_dotfiles diana
    copy_dotfiles argo
    copy_dotfiles pandora
    copy_dotfiles sacripante
    copy_dotfiles persephone
}

move_all_output() {
    sink="$1"
    inputs=$(pactl list short sink-inputs | cut -f1)
    echo "$inputs" | xargs -I{} pactl move-sink-input {} "$sink"
}

fan(){
    echo "level $1" | sudo tee /proc/acpi/ibm/fan
}

alias gamma_vga="xgamma -ggamma 0.58 -bgamma 0.7 -rgamma 0.58"

# for mnemonics/completion
alias xgamma_vga=gamma_vga

alias gamma_laptop="xgamma -rgamma 0.78 -bgamma 0.65 -ggamma 0.72"

alias cp_torrent="rsync -r --info=progress2 'astolfo.gstelluto.com:/var/lib/transmission-daemon/downloads/*' /data/movies"

tldr() {
    curl -s "cheat.sh/$(echo -n "$*" | jq -sRr @uri)"
}

tcl_tv() {
    xrandr --newmode "1366x768"x0.0   69.30  1366 1404 1426 1436  768 771 777 803 -hsync -vsync
    xrandr --addmode HDMI2 "1366x768"x0.0
    xrandr --output HDMI2 --left-of LVDS1 --mode "1366x768"x0.0 --gamma 1 --output LVDS1 --primary
    killall panel; panel &
    ~/bin/util/wallpaper/random_wallpaper.sh
}

weechat="mosh weechat"

alias c="source ~/bin/college/c"
alias ccd="source ~/bin/college/ccd"
alias m="source ~/bin/college/m"
alias mcd="source ~/bin/college/ccd --moodle"
alias syl="~/bin/college/syllabus"

alias dmenu="rofi -dmenu"

alias ksac="kdeconnect-cli -n sacripante"

# e() {
# eval $* &! 
# exit
# }

alias pastebin="nc termbin.com 9999"

alias rm='echo "This is not the command you are looking for."; false'
alias rrm='trash-put'

ssps() {
    read -r -d '' awkcommand <<'    EOF'
    { 
        sub(".+pid=", "", $7); 
        sub(",.+", "", $7); 
        pout=""; 
        if(length($7) > 0) {
            pscomm="ps --no-headers -o pid,command -q "$7; 
            pscomm | getline pout; 
            close(pscomm); 
            sub("[0-9]+", "&\t", pout); 
        }
        print $1 " " $5 "\t" pout; 
    }
    EOF
    awkcommand=$(echo "$awkcommand" | sed -r 's!^\s{4}!!')
    sudo ss -tlnupH "$1" | awk "$awkcommand" | sed 's/  */ /g;' | cut -c -70 | column -s$'\t' -t
}
alias pgrep="pgrep -a -f"

# [[ "$SHELL" =~ /bin/zsh ]] && alias "lxc list"="sudo lxc list -c ns4"
# alias "lxclist"="sudo lxc list -c ns4"
# alias lxc="sudo lxc"
lxcsh () {
	local oldname="$(tmux display-message -p '#W')"
	tmux rename-window "$1"
        local command="${2-sh}"
	sudo lxc "exec" "$1" -- "$command"
	tmux rename-window "$oldname"
}

send2ebook () {
    scp "$1" diana:/home/ftpinusc/ftpbook
}

alias N='sudo -E nnn -dH'
[ "$SHELL" = /bin/zsh ] && alias -g NPICK='$(nnn -p -)'
# autocd for nnn
n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, remove the "export" as in:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    # NOTE: NNN_TMPFILE is fixed, should not be modified
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}
